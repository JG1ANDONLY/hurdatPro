y50 <- k50$y
k64 <- get_coord_stormmap(df, "64")
x64 <- k64$x
y64 <- k64$y
# create the plot
p <- ggplot(track, aes(x = numeric.longitude, y = numeric.latitude, group = id,
color = max.wind)) +
geom_path(size = 1) +
geom_polygon(data = map_states, aes(x = long, y = lat, group = group),
fill = NA, color = "gray50") +
geom_polygon(data = k34, aes(x = x34, y = y34), color = "red",
fill = NA, linewidth = 1)+
geom_polygon(data = k50, aes(x = x50, y = y50), color = "orange",
fill = NA, linewidth = 1)+
geom_polygon(data = k64, aes(x = x64, y = y64), color = "darkgreen",
fill = NA, linewidth = 1)+
geom_point(data = data.frame(pos[1],pos[2]),
aes(x = pos[1], y = pos[2]), size = 3, color = "purple") +
labs(title = paste("Storm", storm.ids, "Track And Position_size"),
x = "Longitude", y = "Latitude")
return(p)
}
pos_next <- function(pos0, dist, ang){
ang_rad <- ang * pi/180
radii = 6371
pos <- c(0,0)
pos[2] <- (dist * sin(ang_rad)/ radii) * (360/(2*pi)) + pos0[2]
pos[1] <- (dist * cos(ang_rad) / (6371*cos((dist * sin(ang_rad)/ radii))))*(360/(2*pi)) + pos0[1]
return(pos)
}
track_coords <- function(pos, dis0, ang0, dis1, ang1){
df <- data.frame(long = numeric(101), lat = numeric(101))
dis <- dis0
ang <- ang0
deldis <- (dis1-dis0)/100
angdel <- 90/100
for (i in 1:101){
df[i,] <- pos_next(pos, dis, ang)
dis <- dis + deldis
ang <- ang - angdel
}
return(df)
}
get_coord_stormmap = function(df, knots){
pos <- c(df$numeric.longitude, df$numeric.latitude)
nek <- paste("ne", knots, sep = "")
sek <- paste("se", knots, sep = "")
swk <- paste("sw", knots, sep = "")
nwk <- paste("nw", knots, sep = "")
options(digits = 10)
coordE <- track_coords(pos, df[nek], 45, df[sek], -45 )
coordS <- track_coords(pos, df[sek], -45, df[swk], -135 )
coordW <- track_coords(pos, df[swk], -135, df[nwk], 135 )
coordN <- track_coords(pos, df[nwk], 135, df[nek], 45 )
x <- c(coordE$long, coordS$long, coordW$long,coordN$long)
y <- c(coordE$lat, coordS$lat, coordW$lat,coordN$lat)
storm_coord <- data.frame(x = numeric(404), y = numeric(404))
storm_coord$x <- x
storm_coord$y <- y
return(storm_coord)
}
storm_track_position("AL182012", "20121029", "2100")
rlang::last_error()
k34
storm_track_position <- function(storm.ids, date, time) {
data("hurdat")
# determine if the input is empty
if (length(storm.ids) == 0) {
stop("The input storm ID cannot be empty")
}
# determine if the input is a valid storm ID
if (!all(storm.ids %in% hurdat$id)) {
stop("At least 1 value of the input is not a valid storm ID.")
}
library(ggplot2)
library(maps)
# get the line of the dataframe which contains the nominated info
datnew <- hurdat
df <- datnew[which(datnew$id == storm.ids), ]
df <- df[which(df$time == time), ]
df <- df[which(df$date == date),]
pos <- c(df$numeric.longitude, df$numeric.latitude)
# get the storm data
track <- hurdat[hurdat$id %in% storm.ids, ]
numeric.longitude <- track$numeric.longitude
numeric.latitude <- track$numeric.latitude
id <- track$id
# get the map data
map_states <- map_data("state")
# get the storm polygons
k34 <- get_coord_stormmap(df, "34")
x34 <- k34$x
y34 <- k34$y
k50 <- get_coord_stormmap(df, "50")
x50 <- k50$x
y50 <- k50$y
k64 <- get_coord_stormmap(df, "64")
x64 <- k64$x
y64 <- k64$y
print(k34)
# create the plot
p <- ggplot(track, aes(x = numeric.longitude, y = numeric.latitude, group = id,
color = max.wind)) +
geom_path(size = 1) +
geom_polygon(data = map_states, aes(x = long, y = lat, group = group),
fill = NA, color = "gray50") +
geom_polygon(data = k34, aes(x = x34, y = y34), color = "red",
fill = NA, linewidth = 1)+
geom_polygon(data = k50, aes(x = x50, y = y50), color = "orange",
fill = NA, linewidth = 1)+
geom_polygon(data = k64, aes(x = x64, y = y64), color = "darkgreen",
fill = NA, linewidth = 1)+
geom_point(data = data.frame(pos[1],pos[2]),
aes(x = pos[1], y = pos[2]), size = 3, color = "purple") +
labs(title = paste("Storm", storm.ids, "Track And Position_size"),
x = "Longitude", y = "Latitude")
return(p)
}
pos_next <- function(pos0, dist, ang){
ang_rad <- ang * pi/180
radii = 6371
pos <- c(0,0)
pos[2] <- (dist * sin(ang_rad)/ radii) * (360/(2*pi)) + pos0[2]
pos[1] <- (dist * cos(ang_rad) / (6371*cos((dist * sin(ang_rad)/ radii))))*(360/(2*pi)) + pos0[1]
return(pos)
}
track_coords <- function(pos, dis0, ang0, dis1, ang1){
df <- data.frame(long = numeric(101), lat = numeric(101))
dis <- dis0
ang <- ang0
deldis <- (dis1-dis0)/100
angdel <- 90/100
for (i in 1:101){
df[i,] <- pos_next(pos, dis, ang)
dis <- dis + deldis
ang <- ang - angdel
}
return(df)
}
get_coord_stormmap = function(df, knots){
pos <- c(df$numeric.longitude, df$numeric.latitude)
nek <- paste("ne", knots, sep = "")
sek <- paste("se", knots, sep = "")
swk <- paste("sw", knots, sep = "")
nwk <- paste("nw", knots, sep = "")
options(digits = 10)
coordE <- track_coords(pos, df[nek], 45, df[sek], -45 )
coordS <- track_coords(pos, df[sek], -45, df[swk], -135 )
coordW <- track_coords(pos, df[swk], -135, df[nwk], 135 )
coordN <- track_coords(pos, df[nwk], 135, df[nek], 45 )
x <- c(coordE$long, coordS$long, coordW$long,coordN$long)
y <- c(coordE$lat, coordS$lat, coordW$lat,coordN$lat)
storm_coord <- data.frame(x = numeric(404), y = numeric(404))
storm_coord$x <- x
storm_coord$y <- y
return(storm_coord)
}
storm_track_position("AL182012", "20121029", "2100")
storm_track_position <- function(storm.ids, date, time) {
data("hurdat")
library(ggplot2)
library(maps)
# get the line of the dataframe which contains the nominated info
datnew <- hurdat
df <- datnew[which(datnew$id == storm.ids), ]
df <- df[which(df$time == time), ]
df <- df[which(df$date == date),]
pos <- c(df$numeric.longitude, df$numeric.latitude)
# get the storm data
track <- hurdat[hurdat$id %in% storm.ids, ]
numeric.longitude <- track$numeric.longitude
numeric.latitude <- track$numeric.latitude
id <- track$id
# get the map data
map_states <- map_data("state")
# get the storm polygons
k34 <- get_coord_stormmap(df, "34")
x34 <- k34$x
y34 <- k34$y
k50 <- get_coord_stormmap(df, "50")
x50 <- k50$x
y50 <- k50$y
k64 <- get_coord_stormmap(df, "64")
x64 <- k64$x
y64 <- k64$y
print(x34)
print(y34)
# create the plot
p <- ggplot(track, aes(x = numeric.longitude, y = numeric.latitude, group = id,
color = max.wind)) +
geom_path(size = 1) +
geom_polygon(data = map_states, aes(x = long, y = lat, group = group),
fill = NA, color = "gray50") +
geom_polygon(data = k34, aes(x = x34, y = y34), color = "red",
fill = NA, linewidth = 1)+
geom_polygon(data = k50, aes(x = x50, y = y50), color = "orange",
fill = NA, linewidth = 1)+
geom_polygon(data = k64, aes(x = x64, y = y64), color = "darkgreen",
fill = NA, linewidth = 1)+
geom_point(data = data.frame(pos[1],pos[2]),
aes(x = pos[1], y = pos[2]), size = 3, color = "purple") +
labs(title = paste("Storm", storm.ids, "Track And Position_size"),
x = "Longitude", y = "Latitude")
return(p)
}
pos_next <- function(pos0, dist, ang){
ang_rad <- ang * pi/180
radii = 6371
pos <- c(0,0)
pos[2] <- (dist * sin(ang_rad)/ radii) * (360/(2*pi)) + pos0[2]
pos[1] <- (dist * cos(ang_rad) / (6371*cos((dist * sin(ang_rad)/ radii))))*(360/(2*pi)) + pos0[1]
return(pos)
}
storm_track_position("AL182012", "20121029", "2100")
storm_track_position <- function(storm.ids, date, time) {
data("hurdat")
library(ggplot2)
library(maps)
# get the line of the dataframe which contains the nominated info
datnew <- hurdat
df <- datnew[which(datnew$id == storm.ids), ]
df <- df[which(df$time == time), ]
df <- df[which(df$date == date),]
pos <- c(df$numeric.longitude, df$numeric.latitude)
# get the storm data
track <- hurdat[hurdat$id %in% storm.ids, ]
numeric.longitude <- track$numeric.longitude
numeric.latitude <- track$numeric.latitude
id <- track$id
# get the map data
map_states <- map_data("state")
# get the storm polygons
k34 <- get_coord_stormmap(df, "34")
x34 <- k34$x
y34 <- k34$y
k50 <- get_coord_stormmap(df, "50")
x50 <- k50$x
y50 <- k50$y
k64 <- get_coord_stormmap(df, "64")
x64 <- k64$x
y64 <- k64$y
print(x50)
print(y50)
# create the plot
# p <- ggplot(track, aes(x = numeric.longitude, y = numeric.latitude, group = id,
#                        color = max.wind)) +
#   geom_path(size = 1) +
#   geom_polygon(data = map_states, aes(x = long, y = lat, group = group),
#                fill = NA, color = "gray50") +
#   geom_polygon(data = k34, aes(x = x34, y = y34), color = "red",
#                fill = NA, linewidth = 1)+
#   geom_polygon(data = k50, aes(x = x50, y = y50), color = "orange",
#                fill = NA, linewidth = 1)+
#   geom_polygon(data = k64, aes(x = x64, y = y64), color = "darkgreen",
#                fill = NA, linewidth = 1)+
#   geom_point(data = data.frame(pos[1],pos[2]),
#              aes(x = pos[1], y = pos[2]), size = 3, color = "purple") +
#   labs(title = paste("Storm", storm.ids, "Track And Position_size"),
#        x = "Longitude", y = "Latitude")
# return(p)
}
storm_track_position("AL182012", "20121029", "2100")
storm_track_position <- function(storm.ids, date, time) {
data("hurdat")
library(ggplot2)
library(maps)
# get the line of the dataframe which contains the nominated info
datnew <- hurdat
df <- datnew[which(datnew$id == storm.ids), ]
df <- df[which(df$time == time), ]
df <- df[which(df$date == date),]
pos <- c(df$numeric.longitude, df$numeric.latitude)
# get the storm data
track <- hurdat[hurdat$id %in% storm.ids, ]
numeric.longitude <- track$numeric.longitude
numeric.latitude <- track$numeric.latitude
id <- track$id
# get the map data
map_states <- map_data("state")
# get the storm polygons
k34 <- get_coord_stormmap(df, "34")
x34 <- k34$x
y34 <- k34$y
k50 <- get_coord_stormmap(df, "50")
x50 <- k50$x
y50 <- k50$y
k64 <- get_coord_stormmap(df, "64")
x64 <- k64$x
y64 <- k64$y
# create the plot
p <- ggplot(track, aes(x = numeric.longitude, y = numeric.latitude, group = id,
color = max.wind))
#   geom_path(size = 1) +
#   geom_polygon(data = map_states, aes(x = long, y = lat, group = group),
#                fill = NA, color = "gray50") +
#   geom_polygon(data = k34, aes(x = x34, y = y34), color = "red",
#                fill = NA, linewidth = 1)+
#   geom_polygon(data = k50, aes(x = x50, y = y50), color = "orange",
#                fill = NA, linewidth = 1)+
#   geom_polygon(data = k64, aes(x = x64, y = y64), color = "darkgreen",
#                fill = NA, linewidth = 1)+
#   geom_point(data = data.frame(pos[1],pos[2]),
#              aes(x = pos[1], y = pos[2]), size = 3, color = "purple") +
#   labs(title = paste("Storm", storm.ids, "Track And Position_size"),
#        x = "Longitude", y = "Latitude")
return(p)
}
storm_track_position("AL182012", "20121029", "2100")
storm_track_position <- function(storm.ids, date, time) {
data("hurdat")
library(ggplot2)
library(maps)
# get the line of the dataframe which contains the nominated info
datnew <- hurdat
df <- datnew[which(datnew$id == storm.ids), ]
df <- df[which(df$time == time), ]
df <- df[which(df$date == date),]
pos <- c(df$numeric.longitude, df$numeric.latitude)
# get the storm data
track <- hurdat[hurdat$id %in% storm.ids, ]
numeric.longitude <- track$numeric.longitude
numeric.latitude <- track$numeric.latitude
id <- track$id
# get the map data
map_states <- map_data("state")
# get the storm polygons
k34 <- get_coord_stormmap(df, "34")
x34 <- k34$x
y34 <- k34$y
k50 <- get_coord_stormmap(df, "50")
x50 <- k50$x
y50 <- k50$y
k64 <- get_coord_stormmap(df, "64")
x64 <- k64$x
y64 <- k64$y
# create the plot
p <- ggplot(track, aes(x = numeric.longitude, y = numeric.latitude, group = id,
color = max.wind))
geom_path(size = 1)+
geom_polygon(data = map_states, aes(x = long, y = lat, group = group),
fill = NA, color = "gray50")
#   geom_polygon(data = k34, aes(x = x34, y = y34), color = "red",
#                fill = NA, linewidth = 1)+
#   geom_polygon(data = k50, aes(x = x50, y = y50), color = "orange",
#                fill = NA, linewidth = 1)+
#   geom_polygon(data = k64, aes(x = x64, y = y64), color = "darkgreen",
#                fill = NA, linewidth = 1)+
#   geom_point(data = data.frame(pos[1],pos[2]),
#              aes(x = pos[1], y = pos[2]), size = 3, color = "purple") +
#   labs(title = paste("Storm", storm.ids, "Track And Position_size"),
#        x = "Longitude", y = "Latitude")
return(p)
}
storm_track_position("AL182012", "20121029", "2100")
storm_track_position <- function(storm.ids, date, time) {
data("hurdat")
library(ggplot2)
library(maps)
# get the line of the dataframe which contains the nominated info
datnew <- hurdat
df <- datnew[which(datnew$id == storm.ids), ]
df <- df[which(df$time == time), ]
df <- df[which(df$date == date),]
pos <- c(df$numeric.longitude, df$numeric.latitude)
# get the storm data
track <- hurdat[hurdat$id %in% storm.ids, ]
numeric.longitude <- track$numeric.longitude
numeric.latitude <- track$numeric.latitude
id <- track$id
# get the map data
map_states <- map_data("state")
# get the storm polygons
k34 <- get_coord_stormmap(df, "34")
x34 <- k34$x
y34 <- k34$y
k50 <- get_coord_stormmap(df, "50")
x50 <- k50$x
y50 <- k50$y
k64 <- get_coord_stormmap(df, "64")
x64 <- k64$x
y64 <- k64$y
# create the plot
p <- ggplot(track, aes(x = numeric.longitude, y = numeric.latitude, group = id,
color = max.wind)) +
geom_path(size = 1)+
geom_polygon(data = map_states, aes(x = long, y = lat, group = group),
fill = NA, color = "gray50")
#   geom_polygon(data = k34, aes(x = x34, y = y34), color = "red",
#                fill = NA, linewidth = 1)+
#   geom_polygon(data = k50, aes(x = x50, y = y50), color = "orange",
#                fill = NA, linewidth = 1)+
#   geom_polygon(data = k64, aes(x = x64, y = y64), color = "darkgreen",
#                fill = NA, linewidth = 1)+
#   geom_point(data = data.frame(pos[1],pos[2]),
#              aes(x = pos[1], y = pos[2]), size = 3, color = "purple") +
#   labs(title = paste("Storm", storm.ids, "Track And Position_size"),
#        x = "Longitude", y = "Latitude")
return(p)
}
storm_track_position("AL182012", "20121029", "2100")
storm_track_position <- function(storm.ids, date, time) {
data("hurdat")
library(ggplot2)
library(maps)
# get the line of the dataframe which contains the nominated info
datnew <- hurdat
df <- datnew[which(datnew$id == storm.ids), ]
df <- df[which(df$time == time), ]
df <- df[which(df$date == date),]
pos <- c(df$numeric.longitude, df$numeric.latitude)
# get the storm data
track <- hurdat[hurdat$id %in% storm.ids, ]
numeric.longitude <- track$numeric.longitude
numeric.latitude <- track$numeric.latitude
id <- track$id
# get the map data
map_states <- map_data("state")
# get the storm polygons
k34 <- get_coord_stormmap(df, "34")
x34 <- k34$x
y34 <- k34$y
k50 <- get_coord_stormmap(df, "50")
x50 <- k50$x
y50 <- k50$y
k64 <- get_coord_stormmap(df, "64")
x64 <- k64$x
y64 <- k64$y
# create the plot
p <- ggplot(track, aes(x = numeric.longitude, y = numeric.latitude, group = id,
color = max.wind)) +
geom_path(size = 1)+
geom_polygon(data = map_states, aes(x = long, y = lat, group = group),
fill = NA, color = "gray50") +
geom_polygon(data = k34, aes(x = x34, y = y34), color = "red",
fill = NA, linewidth = 1)
#   geom_polygon(data = k50, aes(x = x50, y = y50), color = "orange",
#                fill = NA, linewidth = 1)+
#   geom_polygon(data = k64, aes(x = x64, y = y64), color = "darkgreen",
#                fill = NA, linewidth = 1)+
#   geom_point(data = data.frame(pos[1],pos[2]),
#              aes(x = pos[1], y = pos[2]), size = 3, color = "purple") +
#   labs(title = paste("Storm", storm.ids, "Track And Position_size"),
#        x = "Longitude", y = "Latitude")
return(p)
}
storm_track_position("AL182012", "20121029", "2100")
check()
check()
check()
load_all()
position_size("AL182012", "20121029", "2100")
map_states <- map_data("state")
View(map_states)
check()
check()
check()
storm_track_position <- function(storm.ids, date, time) {
data("hurdat")
# determine if the input is empty
if (length(storm.ids) == 0) {
stop("The input storm ID cannot be empty")
}
# determine if the input is a valid storm ID
if (!all(storm.ids %in% hurdat$id)) {
stop("At least 1 value of the input is not a valid storm ID.")
}
library(ggplot2)
library(maps)
# get the line of the dataframe which contains the nominated info
datnew <- hurdat
df <- datnew[which(datnew$id == storm.ids), ]
df <- df[which(df$time == time), ]
df <- df[which(df$date == date),]
pos <- c(df$numeric.longitude, df$numeric.latitude)
# get the storm data
track <- hurdat[hurdat$id %in% storm.ids, ]
numeric.longitude <- track$numeric.longitude
numeric.latitude <- track$numeric.latitude
id <- track$id
# get the map data
map_states <- map_data("state")
# get the storm polygons
k34 <- get_coord_stormmap(df, "34")
x34 <- k34$x
y34 <- k34$y
k50 <- get_coord_stormmap(df, "50")
x50 <- k50$x
y50 <- k50$y
k64 <- get_coord_stormmap(df, "64")
x64 <- k64$x
y64 <- k64$y
# create the plot
p <- ggplot(track, aes(x = numeric.longitude, y = numeric.latitude, group = id,
color = max.wind)) +
geom_path(size = 1) +
geom_polygon(data = map_states, aes(x = long, y = lat, group = group),
fill = NA, color = "gray50") +
geom_polygon(data = k34, aes(x = x34, y = y34), color = "red",
fill = NA, linewidth = 1)+
geom_polygon(data = k50, aes(x = x50, y = y50), color = "orange",
fill = NA, linewidth = 1)+
geom_polygon(data = k64, aes(x = x64, y = y64), color = "darkgreen",
fill = NA, linewidth = 1)+
geom_point(data = data.frame(pos[1],pos[2]),
aes(x = pos[1], y = pos[2]), size = 3, color = "purple") +
labs(title = paste("Storm", storm.ids, "Track And Position_size"),
x = "Longitude", y = "Latitude")
return(p)
}
devtools::load_all()
devtools::load_all()
devtools::check()
