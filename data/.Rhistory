region <- read.csv("../data/cvd_region.csv")
View(region)
population <- read.table("../data/pop_state.xlsx")
?read.table
population <- read.table("../data/pop_state.xlsx", header = TRUE)
region <- read.csv("../data/cvd_region.csv")
View(region)
population <- read.delim("../data/pop_state.xlsx")
population <- read.delim("../data/pop_state.xlsx", header = FALSE)
population <- read.delim("../data/pop_state.xlsx", header = TRUE)
population <- read.delim("../raw_data/pop_state.xlsx", header = TRUE)
population <- read.delim("../raw_data/pop_state.xlsx")
population <- read.table("../raw_data/pop_state.xlsx")
population <- read.txt("../raw_data/pop_state.xlsx")
library(readxl)
population <- read_excel("../raw_data/pop_state.xlsx")
View(population)
population <- read_excel("../raw_data/pop_state.xlsx", header = FALSE)
?read_excel
population <- read_excel("../raw_data/pop_state.xlsx")
population <- read_excel("../raw_data/pop_state.xlsx", col_names = FALSE)
View(population)
View(population)
population[6:9, ]
population[4:9, ]
colnames(population[4:9, ])
population[4:9, ]
population[, c(1, 13, 15)]
data.needed <- population[4:9, ]
data.needed
data.needed[, c(1, 13, 15)]
data.needed[c(-2), c(1, 13, 15)]
data.needed <- data.needed[c(-2), c(1, 13, 15)]
data.needed
colnames(data.needed.new) <- c("region", "2019", "2020")
data.needed.new <- data.needed[c(-2), c(1, 13, 15)]
region <- read.csv("../data/cvd_region.csv")
population <- read_excel("../raw_data/pop_state.xlsx", col_names = FALSE)
data.needed <- population[4:9, ]
data.needed
data.needed.new <- data.needed[c(-2), c(1, 13, 15)]
data.needed.new
colnames(data.needed.new) <- c("region", "2019", "2020")
colnames(data.needed.new) <- c("region", "2019", "2020")
data.needed.new
region <- read.csv("../data/cvd_region.csv")
population <- read_excel("../raw_data/pop_state.xlsx", col_names = FALSE)
data.needed <- population[4:9, ]
data.needed
data.needed.new <- data.needed[c(-1, -2), c(1, 13, 15)]
colnames(data.needed.new) <- c("region", "2019", "2020")
data.needed.new
region.month
colnames(region)
region[1, "month"]
grep("2018", region[1, "month"])
grep("2019", region[1, "month"])
if (1) {r}
if (1) {print(1)}
if (0) {print(1)}
data.needed.new <- data.needed[c(-1, -2), c(1, 12, 13, 15)]
colnames(data.needed.new) <- c("region", "2018", "2019", "2020")
data.needed.new
for (i in nrow(region)){
if (region[i, "region"] == "Northeast") {
if (grep("18", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 2]
} else if (grep("19", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 3]
}
else {
region[i, "population"] = data.needed.new[1, 4]
}
}}
for (i in 1:nrow(region)){
if (region[i, "region"] == "Northeast") {
if (grep("18", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 2]
} else if (grep("19", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 3]
}
else {
region[i, "population"] = data.needed.new[1, 4]
}
}}
region <- read.csv("../data/cvd_region.csv")
for (i in 1:nrow(region)){
if (region[i, "region"] == "Northeast") {
if (grep("18", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 2]
} else if (grep("19", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 3]
}
else {
region[i, "population"] = data.needed.new[1, 4]
}
}}
region[1, "region"]
for (i in 1:nrow(region)){
if (region[i, "region"] == "Northeast") {
if (grep("18", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 2]
} else if (grep("19", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 3]
} else {
region[i, "population"] = data.needed.new[1, 4]
}
}
}
grep("18", region[1, "month"])
region <- read.csv("../data/cvd_region.csv")
population <- read_excel("../raw_data/pop_state.xlsx", col_names = FALSE)
for (i in 1:nrow(region)){
if (region[i, "region"] == "Northeast") {
if (grep("18", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 2]
} else if (grep("19", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 3]
} else {
region[i, "population"] = data.needed.new[1, 4]
}
}
}
region <- read.csv("../data/cvd_region.csv")
population <- read_excel("../raw_data/pop_state.xlsx", col_names = FALSE)
for (i in 1:nrow(region)){
if (region[i, "region"] == "Northeast") {
if (grep("2018", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 2]
} else if (grep("2019", region[i, "month"])) {
region[i, "population"] = data.needed.new[1, 3]
} else {
region[i, "population"] = data.needed.new[1, 4]
}
}
}
region <- read.csv("../data/cvd_region.csv")
population <- read_excel("../raw_data/pop_state.xlsx", col_names = FALSE)
library(readxl)
population <- read_excel("../raw_data/pop_state.xlsx", col_names = FALSE)
View(region)
data.needed <- population[4:9, ]
data.needed
data.needed.new <- data.needed[c(-1, -2), c(1, 12, 13, 15)]
colnames(data.needed.new) <- c("region", "2018", "2019", "2020")
data.needed.new
View(region)
View(population)
grep("2018", region$month)
region[test, ]
test <- grep("2018", region$month)
region[test, ]
?grep
regionNortheast.index <- grep("Northeast", region$region)
regionNortheast.index
region[regionNortheast.index, ]
intersect(region2018.index, regionNortheast.index)
regionNortheast.index <- grep("Northeast", region$region)
intersect(region2018.index, regionNortheast.index)
region2018.index <- grep("2018", region$month)
intersect(region2018.index, regionNortheast.index)
data.needed.new[region == "Northeast"]
rownames(data.needed.new) <- region$region
rownames(data.needed.new) <- region$region
rownames(data.needed.new) <- data.needed.new$region
data.needed.new
data.needed.new[region == "Northeast", year == "2018"]
data.needed.new[region == "Northeast", "2018"]
data.needed <- population[4:9, ]
data.needed
data.needed.new <- data.needed[c(-1, -2), c(1, 12, 13, 15)]
colnames(data.needed.new) <- c("region", "2018", "2019", "2020")
data.needed.new
data.needed.new$region == "Northeast"
data.needed.new$`2018`[data.needed.new$region == reg]
data.needed.new$`2018`[data.needed.new$region == "West"]
for (year in c("2018", "2019", "2020")) {
for (reg in c("Northeast", "Midwest", "South", "West")) {
year.index <- grep(year, region$month)
region.index <- grep(reg, region$region)
shared <- intersect(year.index, region.index)
data.needed.new$region == reg
region[shared, "population"] <- data.needed.new$`year`[data.needed.new$region == reg]
}
}
for (year in c("2018", "2019", "2020")) {
for (reg in c("Northeast", "Midwest", "South", "West")) {
year.index <- grep(year, region$month)
region.index <- grep(reg, region$region)
shared <- intersect(year.index, region.index)
region[shared, "population"] <- data.needed.new$`year`[data.needed.new$region == reg]
}
}
for (year in c("2018", "2019", "2020")) {
for (reg in c("Northeast", "Midwest", "South", "West")) {
year.index <- grep(year, region$month)
region.index <- grep(reg, region$region)
shared <- intersect(year.index, region.index)
print(data.needed.new$`year`[data.needed.new$region == reg])
# region[shared, "population"] <- data.needed.new$`year`[data.needed.new$region == reg]
}
}
for (year in c("2018", "2019", "2020")) {
for (reg in c("Northeast", "Midwest", "South", "West")) {
year.index <- grep(year, region$month)
region.index <- grep(reg, region$region)
shared <- intersect(year.index, region.index)
print(data.needed.new$year[data.needed.new$region == reg])
# region[shared, "population"] <- data.needed.new$`year`[data.needed.new$region == reg]
}
}
for (year in c("2018", "2019", "2020")) {
for (reg in c("Northeast", "Midwest", "South", "West")) {
year.index <- grep(year, region$month)
region.index <- grep(reg, region$region)
shared <- intersect(year.index, region.index)
print(data.needed.new$year[data.needed.new$region == reg, year])
break
# region[shared, "population"] <- data.needed.new$`year`[data.needed.new$region == reg]
}
}
for (year in c("2018", "2019", "2020")) {
for (reg in c("Northeast", "Midwest", "South", "West")) {
year.index <- grep(year, region$month)
region.index <- grep(reg, region$region)
shared <- intersect(year.index, region.index)
print(data.needed.new[data.needed.new$region == reg, year])
break
# region[shared, "population"] <- data.needed.new$`year`[data.needed.new$region == reg]
}
}
for (year in c("2018", "2019", "2020")) {
for (reg in c("Northeast", "Midwest", "South", "West")) {
year.index <- grep(year, region$month)
region.index <- grep(reg, region$region)
shared <- intersect(year.index, region.index)
data.needed.new[data.needed.new$region == reg, year])
for (year in c("2018", "2019", "2020")) {
for (reg in c("Northeast", "Midwest", "South", "West")) {
year.index <- grep(year, region$month)
region.index <- grep(reg, region$region)
shared <- intersect(year.index, region.index)
region[shared, "population"] <- data.needed.new[data.needed.new$region == reg, year])
for (year in c("2018", "2019", "2020")) {
for (reg in c("Northeast", "Midwest", "South", "West")) {
year.index <- grep(year, region$month)
region.index <- grep(reg, region$region)
shared <- intersect(year.index, region.index)
region[shared, "population"] <- data.needed.new[data.needed.new$region == reg, year]
}
}
View(region)
region$crude_rate <- 100000 * death / population
region$crude_rate <- 100000 * region$death / region$population
region$death / region$population
region$death
as.vector(region$death) / as.vector(region$population)
typeof(region$death)
typeof(region$population)
region$population <- as.integer(region$population)
region$crude_rate <- 100000 * region$death / region$population
View(region)
write.csv(region, file = "../data/cvd_region_crude_rate.csv", row.names = FALSE)
ggplot(region, aes(x = region, y = crude_rate)) + geom_boxplot() + labs(x = "region", y = "crude rate", title = "Boxplot of crude rate by region")
library(tidyverse)
library(ggplot2)
region <- read.csv("../data/cvd_region_crude_rate.csv")
region %>%
group_by(region) %>%
summarise(
count = n(),
mean = mean(crude_rate, na.rm = TRUE),
sd = sd(crude_rate, na.rm = TRUE),
median = median(crude_rate, na.rm = TRUE),
IQR = IQR(crude_rate, na.rm = TRUE)
)
ggplot(region, aes(x = region, y = crude_rate)) + geom_boxplot() + labs(x = "region", y = "crude rate", title = "Boxplot of crude rate by region")
theme_minimal()
ggplot(region, aes(x = region, y = crude_rate)) + geom_boxplot() + labs(x = "region", y = "crude rate", title = "Boxplot of crude rate by region") + theme_minimal()
ggplot(region, aes(x = region, y = crude_rate)) + geom_boxplot() + labs(x = "region", y = "crude rate", title = "Boxplot of crude rate by region") + theme(plot.title = element_text(size = 15, face = 'bold')) +
ggplot(region, aes(x = region, y = crude_rate)) + geom_boxplot() + labs(x = "region", y = "crude rate", title = "Boxplot of crude rate by region") + theme(plot.title = element_text(size = 15, face = 'bold'))
+ theme_minimal()
ggplot(region, aes(x = region, y = crude_rate)) + geom_boxplot() +
labs(x = "region", y = "crude rate", title = "Boxplot of crude rate by region")
+ theme_minimal()
ggplot(region, aes(x = region, y = crude_rate)) + geom_boxplot() +
labs(x = "region", y = "crude rate", title = "Boxplot of crude rate by region") + theme_minimal()
region %>%
ggplot(aes(x = crude_rate, fill = region)) +
geom_histogram(color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("red", "blue")) +
labs(x = 'crude rate', y = "count", title = 'Boxplot of crude rates by region') +
theme(plot.title = element_text(size = 15, face = 'bold'))
region %>%
ggplot(aes(x = crude_rate, fill = region)) +
geom_histogram(color="#e9ecef", alpha=0.6, position = 'identity')
# scale_fill_manual(values=c("red", "blue")) +
# labs(x = 'crude rate', y = "count", title = 'Boxplot of crude rates by region') +
# theme(plot.title = element_text(size = 15, face = 'bold'))
View(region)
View(region)
?facet_grid
# ggplot(aes(x = crude_rate, fill = region)) +
# geom_histogram(color="#e9ecef", alpha=0.6, position = 'identity')
region %>%
group_by(region) %>%
facet_grid(rows = vars(crude_rate))
region %>%
group_by(region)
region %>%
group_by(region) %>%
facet_grid(rows = vars(region))
region %>%
group_by(region) %>%
facet_wrap(facets = vars(region))
region_grouped <- region %>%
group_by(region)
ggplot(region_grouped, aes(x = region, y = crude_rate))
ggplot(region_grouped, aes(x = region, y = crude_rate)) + geom_histogram()
df <- read.csv("https://raw.github.coecis.cornell.edu/jsg342/statcomp2023/main/datasets/hurdat2-1851-2022-040723.txt?token=GHSAT0AAAAAAAAANMFJFLLBJ4IEUUAWAUHKZCVQECQ", header = FALSE, na.strings = "")
df <- read.csv("https://raw.github.coecis.cornell.edu/jsg342/statcomp2023/main/datasets/hurdat2-1851-2022-040723.txt?token=GHSAT0AAAAAAAAANMFJFLLBJ4IEUUAWAUHKZCVQECQ", header = FALSE, na.strings = "")
df <- read.csv("https://raw.github.coecis.cornell.edu/jsg342/statcomp2023/main/datasets/hurdat2-1851-2022-040723.txt?token=GHSAT0AAAAAAAAANMFJFLLBJ4IEUUAWAUHKZCVQECQ", header = FALSE, na.strings = "")
df <- read.csv("https://github.coecis.cornell.edu/jsg342/statcomp2023/blob/main/datasets/hurdat2-1851-2022-040723.txt", header = FALSE, na.strings = "")
View(df)
df <- read.csv("https://github.coecis.cornell.edu/jsg342/statcomp2023/blob/f316e01385829dd2e2491c30c4797c43e06d620b/datasets/hurdat2-1851-2022-040723.txt", header = FALSE, na.strings = "")
df <- read.csv("https://raw.github.coecis.cornell.edu/jsg342/statcomp2023/main/datasets/hurdat2-1851-2022-040723.txt?token=GHSAT0AAAAAAAAANP6TER7C3F5K55R7K7MQZC6SVNQ", header = FALSE, na.strings = "")
hurdat <- data.frame(matrix(NA, nrow = 0, ncol = ncol(df) + 2))
colnames(hurdat) <- c("id", "name", "date", "time","event", "status", "latitude",
"longitude", "max.wind", "min.pressure", "ne34", "se34",
"sw34", "nw34", "ne50", "se50","sw50", "nw50", "ne64",
"se64","sw64", "nw64", "r.max.wind")
al.index <- grep("^AL", df$V1)
accu <- 1
for (index in 2:length(al.index)) {
start <- al.index[index - 1] + 1
end <- al.index[index] - 1
code <- df$V1[start - 1]
name <- df$V2[start - 1]
incre <- al.index[index] - al.index[index - 1] - 1
accu0 <- accu + incre-1
hurdat[accu:accu0, ] <- cbind(code, name, df[start:end, ])
accu <- accu+incre
}
hurdat[53947:53972, ] <- cbind(df$V1[al.index[1952]], df$V2[al.index[1952]],
df[55899:55924,])
hurdat[hurdat == -99] <- NA
hurdat[hurdat == -999] <- NA
hurdat$numeric.latitude <- as.numeric(gsub("[^0-9\\.]", "", hurdat$latitude))
hurdat$numeric.longitude <- as.numeric(gsub("[^0-9\\.]", "", hurdat$longitude) - 360)
hurdat$numeric.longitude <- as.numeric(gsub("[^0-9\\.]", "", hurdat$longitude)) - 360
save(hurdat, file = "hurdat.RData")
getwd()
setwd("/Users/guozhongyi/Desktop/hurdatPro/data/hurdat.RData")
setwd("/Users/guozhongyi/Desktop/hurdatPro/data/")
load("hurdat.RData")
View(hurdat)
hurdat$numeric.longitude <- as.numeric(gsub("[^0-9\\.]", "", hurdat$longitude)) - 180
save(hurdat, file = "hurdat.RData")
load("hurdat.RData")
library(tidyverse)
library(ggplot2)
region <- read.csv("../data/cvd_region_crude_rate.csv")
region %>%
group_by(region) %>%
summarise(
count = n(),
mean = mean(crude_rate, na.rm = TRUE),
sd = sd(crude_rate, na.rm = TRUE),
median = median(crude_rate, na.rm = TRUE),
IQR = IQR(crude_rate, na.rm = TRUE)
)
region <- read.csv("../data/cvd_region_crude_rate.csv")
region %>%
group_by(region) %>%
summarise(
count = n(),
mean = mean(crude_rate, na.rm = TRUE),
sd = sd(crude_rate, na.rm = TRUE),
median = median(crude_rate, na.rm = TRUE),
IQR = IQR(crude_rate, na.rm = TRUE)
)
ggplot(region, aes(x = region, y = crude_rate)) + geom_boxplot() +
labs(x = "region", y = "crude rate", title = "Boxplot of crude rate by region") +
theme_minimal()
region_grouped <- region %>%
group_by(region)
ggplot(region_grouped, aes(x = region, y = crude_rate)) + geom_histogram()
head(region)
region %>%
ggplot(aes(x=crude_rate, fill=region)) +
geom_histogram(color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("red", "blue")) +
labs(x = 'Crude Rate', y = "region", title = 'Boxplot of Crude Rates by region') +
theme(plot.title = element_text(size = 15, face = 'bold'))
region %>%
ggplot(aes(x=crude_rate, fill=region)) +
geom_histogram(color="#e9ecef", alpha=0.6, position = 'identity')
shapiro.test(region$crude_rate)
region %>%
group_by(region) %>%
get_summary_stats(crude_rate,type = "mean_sd")
library(tidyverse)
library(ggplot2)
region %>%
group_by(region) %>%
get_summary_stats(crude_rate,type = "mean_sd")
region %>%
group_by(region) %>%
identify_outliers(crude_rate)
?identify_outliers
library(rstatix)
region %>%
group_by(region) %>%
get_summary_stats(crude_rate,type = "mean_sd")
region %>%
group_by(region) %>%
identify_outliers(crude_rate)
region %>%
group_by(region) %>%
shapiro_test(crude_rate)
region %>%
levene_test(crude_rate ~ region)
region %>%
anova(crude_rate ~ region, alternative = "two.sided")
region %>%
anova(crude_rate ~ region)
?anoava
?anova
region %>%
aov(crude_rate ~ region, data = .)
anova_result <- region %>%
aov(crude_rate ~ region, data = .)
summary(anova_result)
ggplot(data = region)+
geom_boxplot( mapping = aes(x = region, y = crude_rate)) +
labs(x = "Pre/Post COVID", y = "Crude rates", title = "Crude Rates Pre- and Post- COVID")+
theme(plot.title = element_text(hjust = 0.5))
getwd()
df <- read.csv("https://raw.github.coecis.cornell.edu/jsg342/statcomp2023/main/datasets/hurdat2-1851-2022-040723.txt?token=GHSAT0AAAAAAAAANP6TER7C3F5K55R7K7MQZC6SVNQ", header = FALSE, na.strings = "")
hurdat <- data.frame(matrix(NA, nrow = 0, ncol = ncol(df) + 2))
colnames(hurdat) <- c("id", "name", "date", "time","event", "status", "latitude",
"longitude", "max.wind", "min.pressure", "ne34", "se34",
"sw34", "nw34", "ne50", "se50","sw50", "nw50", "ne64",
"se64","sw64", "nw64", "r.max.wind")
al.index <- grep("^AL", df$V1)
accu <- 1
for (index in 2:length(al.index)) {
start <- al.index[index - 1] + 1
end <- al.index[index] - 1
code <- df$V1[start - 1]
name <- df$V2[start - 1]
incre <- al.index[index] - al.index[index - 1] - 1
accu0 <- accu + incre-1
hurdat[accu:accu0, ] <- cbind(code, name, df[start:end, ])
accu <- accu+incre
}
hurdat[53947:53972, ] <- cbind(df$V1[al.index[1952]], df$V2[al.index[1952]],
df[55899:55924,])
